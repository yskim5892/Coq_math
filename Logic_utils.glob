DIGEST 15fc8834470e1b9cdc67a299578e0c54
FLogic_utils
ax 6:27 <> law_of_excluded_middle
R51:54 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R50:50 Logic_utils <> P var
R55:55 Coq.Init.Logic <> ::type_scope:'~'_x not
R56:56 Logic_utils <> P var
prf 68:75 <> neq_comm
R102:102 Logic_utils <> A var
R112:115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R117:120 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R116:116 Logic_utils <> b var
R121:121 Logic_utils <> a var
R107:110 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R106:106 Logic_utils <> a var
R111:111 Logic_utils <> b var
R146:148 Coq.Init.Logic <> not def
prf 212:221 <> de_morgan1
R263:266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R267:267 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R274:279 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R286:286 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R269:272 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R268:268 Logic_utils <> P var
R273:273 Logic_utils <> R var
R281:284 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R280:280 Logic_utils <> Q var
R285:285 Logic_utils <> R var
R250:250 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R257:261 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R252:255 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R251:251 Logic_utils <> P var
R256:256 Logic_utils <> Q var
R262:262 Logic_utils <> R var
R337:345 Coq.Init.Logic <> or_introl constr
R337:345 Coq.Init.Logic <> or_introl constr
R354:357 Coq.Init.Logic <> conj constr
R354:357 Coq.Init.Logic <> conj constr
R388:396 Coq.Init.Logic <> or_intror constr
R388:396 Coq.Init.Logic <> or_intror constr
R405:408 Coq.Init.Logic <> conj constr
R405:408 Coq.Init.Logic <> conj constr
prf 445:454 <> de_morgan2
R496:499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R500:500 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R507:512 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R519:519 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R502:505 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R501:501 Logic_utils <> P var
R506:506 Logic_utils <> R var
R514:517 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R513:513 Logic_utils <> Q var
R518:518 Logic_utils <> R var
R483:483 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R490:494 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R485:488 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R484:484 Logic_utils <> P var
R489:489 Logic_utils <> Q var
R495:495 Logic_utils <> R var
R543:546 Coq.Init.Logic <> conj constr
R543:546 Coq.Init.Logic <> conj constr
R574:578 Coq.Init.Logic <> proj1 thm
R574:578 Coq.Init.Logic <> proj1 thm
R593:601 Coq.Init.Logic <> or_introl constr
R593:601 Coq.Init.Logic <> or_introl constr
R624:632 Coq.Init.Logic <> or_intror constr
R624:632 Coq.Init.Logic <> or_intror constr
R670:674 Coq.Init.Logic <> proj2 thm
R670:674 Coq.Init.Logic <> proj2 thm
R689:697 Coq.Init.Logic <> or_introl constr
R689:697 Coq.Init.Logic <> or_introl constr
R720:728 Coq.Init.Logic <> or_intror constr
R720:728 Coq.Init.Logic <> or_intror constr
prf 755:774 <> reduce_or_P_and_notP
R815:818 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R819:819 Logic_utils <> Q var
R801:801 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R808:812 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R803:806 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R802:802 Logic_utils <> Q var
R807:807 Logic_utils <> P var
R813:813 Coq.Init.Logic <> ::type_scope:'~'_x not
R814:814 Logic_utils <> P var
R843:852 Logic_utils <> de_morgan1 thm
R843:852 Logic_utils <> de_morgan1 thm
R893:897 Coq.Init.Logic <> proj1 thm
R893:897 Coq.Init.Logic <> proj1 thm
R918:922 Coq.Init.Logic <> proj2 thm
R918:922 Coq.Init.Logic <> proj2 thm
prf 983:991 <> not_not_P
R1026:1030 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1015:1017 Coq.Init.Logic <> not def
R1020:1022 Coq.Init.Logic <> not def
R1024:1024 Logic_utils <> P var
R1031:1031 Logic_utils <> P var
R1064:1067 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R1068:1068 Coq.Init.Logic <> ::type_scope:'~'_x not
R1064:1067 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R1068:1068 Coq.Init.Logic <> ::type_scope:'~'_x not
R1081:1102 Logic_utils <> law_of_excluded_middle prfax
R1081:1102 Logic_utils <> law_of_excluded_middle prfax
R1131:1133 Coq.Init.Logic <> iff def
R1142:1145 Coq.Init.Logic <> conj constr
R1142:1145 Coq.Init.Logic <> conj constr
R1228:1230 Coq.Init.Logic <> iff def
R1239:1242 Coq.Init.Logic <> conj constr
R1239:1242 Coq.Init.Logic <> conj constr
