DIGEST 39b04e8fbd4bda851ebf5de6f448301d
FLogic_utils
ax 6:27 <> law_of_excluded_middle
R51:54 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R50:50 Logic_utils <> P var
R55:55 Coq.Init.Logic <> ::type_scope:'~'_x not
R56:56 Logic_utils <> P var
prf 68:75 <> neq_comm
R102:102 Logic_utils <> A var
R112:115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R117:120 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R116:116 Logic_utils <> b var
R121:121 Logic_utils <> a var
R107:110 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R106:106 Logic_utils <> a var
R111:111 Logic_utils <> b var
R146:148 Coq.Init.Logic <> not def
prf 212:221 <> de_morgan1
R263:266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R267:267 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R274:279 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R286:286 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R269:272 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R268:268 Logic_utils <> P var
R273:273 Logic_utils <> R var
R281:284 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R280:280 Logic_utils <> Q var
R285:285 Logic_utils <> R var
R250:250 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R257:261 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R252:255 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R251:251 Logic_utils <> P var
R256:256 Logic_utils <> Q var
R262:262 Logic_utils <> R var
R337:345 Coq.Init.Logic <> or_introl constr
R337:345 Coq.Init.Logic <> or_introl constr
R354:357 Coq.Init.Logic <> conj constr
R354:357 Coq.Init.Logic <> conj constr
R388:396 Coq.Init.Logic <> or_intror constr
R388:396 Coq.Init.Logic <> or_intror constr
R405:408 Coq.Init.Logic <> conj constr
R405:408 Coq.Init.Logic <> conj constr
prf 445:454 <> de_morgan2
R496:499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R500:500 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R507:512 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R519:519 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R502:505 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R501:501 Logic_utils <> P var
R506:506 Logic_utils <> R var
R514:517 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R513:513 Logic_utils <> Q var
R518:518 Logic_utils <> R var
R483:483 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R490:494 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R485:488 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R484:484 Logic_utils <> P var
R489:489 Logic_utils <> Q var
R495:495 Logic_utils <> R var
R543:546 Coq.Init.Logic <> conj constr
R543:546 Coq.Init.Logic <> conj constr
R574:578 Coq.Init.Logic <> proj1 thm
R574:578 Coq.Init.Logic <> proj1 thm
R593:601 Coq.Init.Logic <> or_introl constr
R593:601 Coq.Init.Logic <> or_introl constr
R624:632 Coq.Init.Logic <> or_intror constr
R624:632 Coq.Init.Logic <> or_intror constr
R670:674 Coq.Init.Logic <> proj2 thm
R670:674 Coq.Init.Logic <> proj2 thm
R689:697 Coq.Init.Logic <> or_introl constr
R689:697 Coq.Init.Logic <> or_introl constr
R720:728 Coq.Init.Logic <> or_intror constr
R720:728 Coq.Init.Logic <> or_intror constr
prf 755:774 <> reduce_or_P_and_notP
R815:818 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R819:819 Logic_utils <> Q var
R801:801 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R808:812 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R803:806 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R802:802 Logic_utils <> Q var
R807:807 Logic_utils <> P var
R813:813 Coq.Init.Logic <> ::type_scope:'~'_x not
R814:814 Logic_utils <> P var
R843:852 Logic_utils <> de_morgan1 thm
R843:852 Logic_utils <> de_morgan1 thm
R893:897 Coq.Init.Logic <> proj1 thm
R893:897 Coq.Init.Logic <> proj1 thm
R918:922 Coq.Init.Logic <> proj2 thm
R918:922 Coq.Init.Logic <> proj2 thm
prf 966:974 <> not_not_P
R1009:1013 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R998:1000 Coq.Init.Logic <> not def
R1003:1005 Coq.Init.Logic <> not def
R1007:1007 Logic_utils <> P var
R1014:1014 Logic_utils <> P var
R1047:1050 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R1051:1051 Coq.Init.Logic <> ::type_scope:'~'_x not
R1047:1050 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R1051:1051 Coq.Init.Logic <> ::type_scope:'~'_x not
R1064:1085 Logic_utils <> law_of_excluded_middle prfax
R1064:1085 Logic_utils <> law_of_excluded_middle prfax
R1114:1116 Coq.Init.Logic <> iff def
R1125:1128 Coq.Init.Logic <> conj constr
R1125:1128 Coq.Init.Logic <> conj constr
R1199:1201 Coq.Init.Logic <> iff def
R1210:1213 Coq.Init.Logic <> conj constr
R1210:1213 Coq.Init.Logic <> conj constr
prf 1284:1299 <> iff_iff_compat_l
R1324:1324 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1332:1337 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1361:1361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1338:1338 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1346:1352 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1360:1360 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1340:1344 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1339:1339 Logic_utils <> A var
R1345:1345 Logic_utils <> B var
R1354:1358 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1353:1353 Logic_utils <> A var
R1359:1359 Logic_utils <> C var
R1326:1330 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1325:1325 Logic_utils <> B var
R1331:1331 Logic_utils <> C var
R1385:1394 Coq.Init.Logic <> iff_to_and thm
R1385:1394 Coq.Init.Logic <> iff_to_and thm
R1403:1406 Coq.Init.Logic <> conj constr
R1403:1406 Coq.Init.Logic <> conj constr
R1425:1433 Coq.Init.Logic <> iff_trans thm
R1425:1433 Coq.Init.Logic <> iff_trans thm
R1483:1491 Coq.Init.Logic <> iff_trans thm
R1483:1491 Coq.Init.Logic <> iff_trans thm
R1522:1528 Coq.Init.Logic <> iff_sym thm
R1522:1528 Coq.Init.Logic <> iff_sym thm
prf 1554:1569 <> iff_iff_compat_r
R1594:1594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1602:1607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1631:1631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1608:1608 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1616:1622 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1630:1630 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1610:1614 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1609:1609 Logic_utils <> B var
R1615:1615 Logic_utils <> A var
R1624:1628 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1623:1623 Logic_utils <> C var
R1629:1629 Logic_utils <> A var
R1596:1600 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1595:1595 Logic_utils <> B var
R1601:1601 Logic_utils <> C var
R1655:1664 Coq.Init.Logic <> iff_to_and thm
R1655:1664 Coq.Init.Logic <> iff_to_and thm
R1673:1676 Coq.Init.Logic <> conj constr
R1673:1676 Coq.Init.Logic <> conj constr
R1695:1703 Coq.Init.Logic <> iff_trans thm
R1695:1703 Coq.Init.Logic <> iff_trans thm
R1724:1730 Coq.Init.Logic <> iff_sym thm
R1724:1730 Coq.Init.Logic <> iff_sym thm
R1768:1776 Coq.Init.Logic <> iff_trans thm
R1768:1776 Coq.Init.Logic <> iff_trans thm
